[{"C:\\wamp64\\www\\adopt-a-pet\\client\\src\\utils\\setAuthToken.js":"1","C:\\wamp64\\www\\adopt-a-pet\\client\\src\\store\\actions\\actionTypes.js":"2","C:\\wamp64\\www\\adopt-a-pet\\client\\src\\store\\actions\\pet.js":"3","C:\\wamp64\\www\\adopt-a-pet\\client\\src\\components\\Admin\\Admin.js":"4","C:\\wamp64\\www\\adopt-a-pet\\client\\src\\components\\Layout\\Layout.js":"5","C:\\wamp64\\www\\adopt-a-pet\\client\\src\\store\\actions\\index.js":"6","C:\\wamp64\\www\\adopt-a-pet\\client\\src\\store\\reducers\\pet.js":"7","C:\\wamp64\\www\\adopt-a-pet\\client\\src\\components\\Dashboard\\Dashboard.js":"8","C:\\wamp64\\www\\adopt-a-pet\\client\\src\\App.js":"9","C:\\wamp64\\www\\adopt-a-pet\\client\\src\\components\\ShowPet\\ShowPet.js":"10","C:\\wamp64\\www\\adopt-a-pet\\client\\src\\store\\reducers\\index.js":"11","C:\\wamp64\\www\\adopt-a-pet\\client\\src\\store\\actions\\auth.js":"12","C:\\wamp64\\www\\adopt-a-pet\\client\\src\\components\\AppPet\\AddPet.js":"13","C:\\wamp64\\www\\adopt-a-pet\\client\\src\\components\\EditPet\\EditPet.js":"14","C:\\wamp64\\www\\adopt-a-pet\\client\\src\\index.js":"15"},{"size":260,"mtime":1606505955179,"results":"16","hashOfConfig":"17"},{"size":1052,"mtime":1606816920242,"results":"18","hashOfConfig":"17"},{"size":5419,"mtime":1606817035139,"results":"19","hashOfConfig":"17"},{"size":3553,"mtime":1606813338478,"results":"20","hashOfConfig":"17"},{"size":5071,"mtime":1606736525301,"results":"21","hashOfConfig":"17"},{"size":221,"mtime":1606817045303,"results":"22","hashOfConfig":"17"},{"size":2397,"mtime":1606817070225,"results":"23","hashOfConfig":"17"},{"size":3663,"mtime":1606820002270,"results":"24","hashOfConfig":"17"},{"size":1115,"mtime":1606805450351,"results":"25","hashOfConfig":"17"},{"size":2399,"mtime":1606814531507,"results":"26","hashOfConfig":"17"},{"size":268,"mtime":1606719041274,"results":"27","hashOfConfig":"17"},{"size":837,"mtime":1606567568473,"results":"28","hashOfConfig":"17"},{"size":4650,"mtime":1606804312647,"results":"29","hashOfConfig":"17"},{"size":5304,"mtime":1606809853470,"results":"30","hashOfConfig":"17"},{"size":1150,"mtime":1606545404497,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1y98ozp",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\wamp64\\www\\adopt-a-pet\\client\\src\\utils\\setAuthToken.js",[],"C:\\wamp64\\www\\adopt-a-pet\\client\\src\\store\\actions\\actionTypes.js",[],"C:\\wamp64\\www\\adopt-a-pet\\client\\src\\store\\actions\\pet.js",[],"C:\\wamp64\\www\\adopt-a-pet\\client\\src\\components\\Admin\\Admin.js",["65","66"],"import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\nimport './Admin.css';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Card, Button, Container, Row, Col } from 'react-bootstrap';\r\n\r\nimport Unauthorized from '../Unauthourized/Unauthorized';\r\n\r\nexport const Admin = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.getUser();\r\n        props.getPets();\r\n    }, []);\r\n\r\n    const deleteHandler = (id) => {\r\n        console.log('delete');\r\n        props.deletePet(id);\r\n    }\r\n\r\n    if(props.deleted){\r\n        window.location.reload(true);\r\n    }\r\n\r\n    const user = props.user || {};\r\n    if (user.role === 'ROLE_ADMIN') {\r\n        return (\r\n            <div style={{backgroundColor: \"#f0f0f0\", height:\"100%\", minHeight:\"100vh\"}}>\r\n                <div className=\"\">\r\n                    <div className=\"linkBox\">\r\n                        <Link to=\"/add-a-pet\" className=\"btn btn-sm btn-primary\">Add a Pet</Link>\r\n                    </div>\r\n                    {props.pets.length > 0 ?\r\n                        <Container fluid className=\"cardLayout\">\r\n                            <Row>\r\n                                {props.pets.map(pet => (\r\n                                    <Col style={{boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"}} sm={6} md={6} xl={4} lg={4}>\r\n                                        <Card style={{ width: '18rem', margin: \"20px\" }}>\r\n                                            <Card.Img variant=\"top\" src={pet.image} />\r\n                                            <Card.Body className=\"text-center\">\r\n                                                <Card.Title>{pet.name}</Card.Title>\r\n                                                <Card.Text>\r\n                                                    {pet.type}\r\n                                                </Card.Text>\r\n                                                <div>\r\n                                                    <Link to={\"/show/\" + pet._id} className=\"mr-2 btn btn-primary btn-sm\">Show</Link>\r\n                                                    <Link to={\"/edit/\" + pet._id} className=\"mr-2 btn btn-success btn-sm\">Edit</Link>\r\n                                                    <Button variant=\"danger\" onClick={() => deleteHandler(pet._id)} size=\"sm\">Delete</Button>\r\n                                                </div>\r\n                                            </Card.Body>\r\n                                        </Card>\r\n                                    </Col>\r\n                                ))}\r\n                            </Row>\r\n                        </Container> :\r\n                        <div className=\"errorMessageBox container\">\r\n                            No Pets available to adopt. Please check again later.\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <Unauthorized />\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.auth.user,\r\n        pets: state.pet.pets,\r\n        deleted: state.pet.deleted\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getUser: () => dispatch(actions.loadUser()),\r\n        getPets: () => dispatch(actions.getPets()),\r\n        deletePet: (id) => dispatch(actions.deletePet(id)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Admin);\r\n","C:\\wamp64\\www\\adopt-a-pet\\client\\src\\components\\Layout\\Layout.js",["67"],"C:\\wamp64\\www\\adopt-a-pet\\client\\src\\store\\actions\\index.js",[],"C:\\wamp64\\www\\adopt-a-pet\\client\\src\\store\\reducers\\pet.js",[],"C:\\wamp64\\www\\adopt-a-pet\\client\\src\\components\\Dashboard\\Dashboard.js",["68"],"C:\\wamp64\\www\\adopt-a-pet\\client\\src\\App.js",[],"C:\\wamp64\\www\\adopt-a-pet\\client\\src\\components\\ShowPet\\ShowPet.js",["69"],"C:\\wamp64\\www\\adopt-a-pet\\client\\src\\store\\reducers\\index.js",[],"C:\\wamp64\\www\\adopt-a-pet\\client\\src\\store\\actions\\auth.js",[],"C:\\wamp64\\www\\adopt-a-pet\\client\\src\\components\\AppPet\\AddPet.js",[],"C:\\wamp64\\www\\adopt-a-pet\\client\\src\\components\\EditPet\\EditPet.js",["70","71"],"import React, { useState, useEffect } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Button from '../UI/Button/Button';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nexport const EditPet = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.getPet(props.match.params.id);\r\n    }, []);\r\n\r\n    const pet = props.pet || {};\r\n\r\n    console.log(pet);\r\n\r\n    const [formData, setFormData] = useState({\r\n        name: pet.name,\r\n        type: pet.type,\r\n        breed: pet.breed,\r\n        location: pet.location,\r\n        age: pet.age,\r\n        image: pet.image\r\n    });\r\n\r\n    useEffect(() => {\r\n        setFormData({\r\n            ...formData,\r\n            name: pet.name,\r\n            type: pet.type,\r\n            breed: pet.breed,\r\n            location: pet.location,\r\n            age: pet.age,\r\n            image: pet.image\r\n        })\r\n    },[props.pet])\r\n\r\n    const { name, type, breed, location, age, image } = formData;\r\n\r\n    console.log(formData);\r\n\r\n    const onChange = e => {\r\n        console.log(e.target.files);\r\n        if (e.target.files) {\r\n            console.log(e.target.files[0]);\r\n            setFormData({ ...formData, [e.target.name]: e.target.files[0] })\r\n        } else {\r\n            setFormData({ ...formData, [e.target.name]: e.target.value })\r\n        }\r\n    };\r\n\r\n    const submitHandler = async e => {\r\n        e.preventDefault();\r\n        console.log(formData);\r\n        props.onEditPet(name, type, breed, age, location, image, props.match.params.id);\r\n    };\r\n\r\n    if (props.message) {\r\n        props.history.push('/admin');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"layout\">\r\n                <div className=\"content\">\r\n                    <div className=\"form\">\r\n                        {props.error &&\r\n                            props.error.constructor === Array ?\r\n                            props.error.map(error =>\r\n                                <div key={error.msg} className=\"errorMessageBox\">\r\n                                    <div>{error.msg}</div>\r\n                                </div>\r\n                            ) :\r\n                            <div key={props.error} className=\"errorMessageBox\">\r\n                                <div>{props.error}</div>\r\n                            </div>}\r\n                        {props.message &&\r\n                            <div className=\"success\">{props.message}</div>}\r\n                        <div className=\"title\">\r\n                            <h1 className=\"titleText\">Edit a Pet</h1>\r\n                        </div>\r\n                        <Form onSubmit={e => submitHandler(e)} encType=\"multipart/form-data\">\r\n                            <Form.Group controlId=\"formBasicName\">\r\n                                <Form.Control onChange={e => onChange(e)} type=\"text\" placeholder=\"Enter name\" name=\"name\" value={name} />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                <Form.Control as=\"select\" onChange={e => onChange(e)} value={type} name=\"type\">\r\n                                    <option value=\"Dog\">Dog</option>\r\n                                    <option value=\"Cat\">Cat</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicBreed\">\r\n                                <Form.Control onChange={e => onChange(e)} type=\"text\" placeholder=\"Enter breed\" name=\"breed\" value={breed} />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicAge\">\r\n                                <Form.Control onChange={e => onChange(e)} type=\"number\" placeholder=\"Enter age\" name=\"age\" value={age} />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicLocation\">\r\n                                <Form.Control onChange={e => onChange(e)} type=\"text\" placeholder=\"Enter location\" name=\"location\" value={location} />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.File onChange={e => onChange(e)} id=\"exampleFormControlFile1\" label=\"Upload Image\" style={{ color: \"white\" }} name=\"image\" />\r\n                            </Form.Group>\r\n                            <div className=\"registerButton\">\r\n                                <Button className design=\"normal\" type=\"submit\">\r\n                                    Submit\r\n                            </Button>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        error: state.pet.error,\r\n        message: state.pet.message,\r\n        pet: state.pet.pet\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onEditPet: (name, type, breed, age, location, image, id) => dispatch(actions.editAPet(name, type, breed, age, location, image, id)),\r\n        getPet: (id) => dispatch(actions.getPetById(id)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPet);\r\n",["72","73"],"C:\\wamp64\\www\\adopt-a-pet\\client\\src\\index.js",["74","75"],{"ruleId":"76","severity":1,"message":"77","line":5,"column":16,"nodeType":"78","messageId":"79","endLine":5,"endColumn":24},{"ruleId":"80","severity":1,"message":"81","line":15,"column":8,"nodeType":"82","endLine":15,"endColumn":10,"suggestions":"83"},{"ruleId":"76","severity":1,"message":"84","line":1,"column":27,"nodeType":"78","messageId":"79","endLine":1,"endColumn":36},{"ruleId":"80","severity":1,"message":"81","line":13,"column":8,"nodeType":"82","endLine":13,"endColumn":10,"suggestions":"85"},{"ruleId":"80","severity":1,"message":"81","line":12,"column":8,"nodeType":"82","endLine":12,"endColumn":10,"suggestions":"86"},{"ruleId":"80","severity":1,"message":"81","line":12,"column":8,"nodeType":"82","endLine":12,"endColumn":10,"suggestions":"87"},{"ruleId":"80","severity":1,"message":"88","line":37,"column":7,"nodeType":"82","endLine":37,"endColumn":18,"suggestions":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"76","severity":1,"message":"94","line":10,"column":10,"nodeType":"78","messageId":"79","endLine":10,"endColumn":29},{"ruleId":"76","severity":1,"message":"95","line":16,"column":7,"nodeType":"78","messageId":"79","endLine":16,"endColumn":17},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["96"],"'useEffect' is defined but never used.",["97"],["98"],["99"],"React Hook useEffect has missing dependencies: 'formData', 'pet.age', 'pet.breed', 'pet.image', 'pet.location', 'pet.name', and 'pet.type'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["100"],"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"'composeWithDevTools' is defined but never used.","'middleware' is assigned a value but never used.",{"desc":"103","fix":"104"},{"desc":"103","fix":"105"},{"desc":"103","fix":"106"},{"desc":"103","fix":"107"},{"desc":"108","fix":"109"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [props]",{"range":"110","text":"111"},{"range":"112","text":"111"},{"range":"113","text":"111"},{"range":"114","text":"111"},"Update the dependencies array to be: [formData, pet.age, pet.breed, pet.image, pet.location, pet.name, pet.type, props.pet]",{"range":"115","text":"116"},[465,467],"[props]",[409,411],[335,337],[351,353],[911,922],"[formData, pet.age, pet.breed, pet.image, pet.location, pet.name, pet.type, props.pet]"]